errors = {
        '9903': '선불사용자 사용금지',
        '9904': 'Block time (날짜제한)',
        '9081': '선불 사용자 FAX, PHONE 발송 제한',
        '9082': '발송해제',
        '9083': 'IP 차단',
        '9084': 'DEVICE 발송 제한',
        '9085': '사용금지 Callback 번호',
        '9905': 'Block time',
        '9907': '지원하지 않는 메시지 타입',
        '9010': '아이디틀림',
        '9011': '비밀번호 틀림',
        '9012': '중복 접속 량 많음',
        '9014': '알림톡/친구톡 유효하지 않은 발신프로필키',
        '9015': '알림톡/친구톡 발신프로필키 미 입력',
        '9016': '알림톡/친구톡 템플릿 미 입력',
        '9017': '존재하지 않는 첨부파일',
        '9018': '0 바이트 첨부파일',
        '9019': '지원하지 않는 첨부파일',
        '9020': '1. Wrong Data Format  2. SEND_TIME 기준 24 시간이 경과한 메시지',
        '9022': 'Wrong Data Format (ex. cinfo 가 특수 문자 / , 공백 을 포함)',
        '9023': '시간제한 (리포트 수신대기 timeout)',
        '9024': 'Wrong Data Format (ex. 메시지 본문 길이)',
        '9026': '블랙리스트에 의한 차단',
        '9027': 'MMS 첨부파일 이미지 사이즈 초과',
        '9028': '첨부파일 URL 구문 오류',
        '9029': 'JSON String 구문 오류',
        '9030': '지원하지 않는 첨부파일 데이터 타입',
        '9031': '첨부파일 테이블과 매칭되는 MSG_KEY 가 없음.',
        '9032': 'RCS 테이블과 매칭되는 REFKEY 가 없음',
        '9033': '지원하지 않는 대체발송 타입',
        '9034': '발송 유효시간 만료',
        '9035': 'Url 다운로드 실패',
        '9036': '브랜드톡 변수형 필수 파라미터 불일치',
        '9037': '시간제한 (클라이언트 timeout)',
        '9070': '선불 잔액 부족',
        '9071': '후불 한도 초과',
        '9072': '정의되지 않은 단가',
        '9074': '등록되지 않는 MessagebaseID or ChatbotID',
        '9080': 'Deny User Ack',
        '9214': 'Wrong Phone Num',
        '9311': 'Uploaded File Not Found',
        '9908': 'PHONE, FAX 선불사용자 제한기능',
        '9090': '기타에러',
        '7000': '전달',
        '7101': '카카오 형식 오류',
        '7103': 'Sender key (발신프로필키) 유효하지 않음',
        '7106': '삭제된 Sender key (발신프로필키)',
        '7107': '차단 상태 Sender key (발신프로필키)',
        '7108': '차단 상태 옐로우 아이디',
        '7109': '닫힌 상태 옐로우 아이디',
        '7110': '삭제된 옐로우 아이디',
        '7111': '삭제대기 상태의 플러스친구 (플러스친구 운영툴에서 확인)',
        '7112': '유효하지 않은 사업자번호',
        '7125': '메시지차단 상태의 플러스친구 (플러스친구 운영툴에서 확인)',
        '7203': '친구톡 전송 시 친구대상 아님',
        '7204': '템플릿 불일치',
        '7206': '시리얼넘버 형식 불일치',
        '7300': '기타에러',
        '7305': '성공불확실(30 일 이내 수신 가능)',
        '7306': '카카오 시스템 오류',
        '7308': '전화번호 오류',
        '7311': '메시지가 존재하지 않음',
        '7314': '메시지 길이 초과',
        '7315': '템플릿 없음',
        '7318': '메시지를 전송할 수 없음',
        '7322': '메시지 발송 불가 시간',
        '7324': '재전송 메시지 존재하지 않음',
        '7325': '변수 글자수 제한 초과',
        '7326': '상담/봇 전환 버튼 extra, event 글자수 제한 초과',
        '7327': '버튼 내용이 템플릿과 일치하지 않음',
        '7328': '메시지 강조 표기 타이틀이 템플릿과 일치하지 않음',
        '7329': '메시지 강조 표기 타이틀 길이 제한 초과 (50 자)',
        '7330': '메시지 타입과 템플릿 강조유형이 일치하지 않음',
        '7331': '헤더가 템플릿과 일치하지 않음',
        '7332': '헤더 길이 제한 초과(16 자)',
        '7333': '아이템 하이라이트가 템플릿과 일치하지 않음',
        '7334': '아이템 하이라이트 타이틀 길이 제한 초과(이미지 없는 경우 30 자, 이미지 있는 경우 21 자)',
        '7335': '아이템 하이라이트 디스크립션 길이 제한 초과(이미지 없는 경우 19 자, 이미지 있는 경우 13 자)',
        '7336': '아이템 리스트가 템플릿과 일치하지 않음',
        '7337': '아이템 리스트의 아이템의 디스크립션 길이 제한 초과(23 자)',
        '7338': '아이템 요약정보가 템플릿과 일치하지 않음',
        '7339': '아이템 요약정보의 디스크립션 길이 제한 초과(14 자)',
        '7340': '아이템 요약정보의 디스크립션에 허용되지 않은 문자 포함(통화기호/코드, 숫자, 콤마, 소수점, 공백을 제외한 문자 포함)',
        '7421': '타임아웃',
        '7521': '중복발신제한',
        '1000': '성공',
        '2000': '메시지가 유효하지 않음',
        '3000': '비즈 뿌리오 계정에 접속 허용 아이피가 등록되어있지 않음',
        '3001': '인증 토큰 발급 호출 시, Basic Authentication 정보가 유효하지 않음',
        '3002': '토큰이 유효하지 않음.',
        '3003': '아이피가 유효하지 않음',
        '3004': '계정이 유효하지 않음',
        '3005': '인증 정보가 유효하지 않음 (bearer)',
        '3006': '비즈뿌리오 계정이 존재하지 않음',
        '3007': '비즈뿌리오 계정의 암호가 유효하지 않음',
        '3008': '비즈뿌리오에 허용된 접속 수를 초과함',
        '3009': '비즈뿌리오 계정이 중지 상태임',
        '3010': '비즈뿌리오 계정에 등록된 접속 허용 IP와 일치하지 않음',
        '3011': '비즈뿌리오 내에서 알 수 없는 오류가 발생됨',
        '3012': '비즈뿌리오에 존재하지 않은 메시지 (예: 보관 주기 35일이 지난 메시지)',
        '3013': '완료 처리 되지 않은 메시지 (예: 통신사로부터 결과 미 수신)',
        '5000': '전송 결과 재 요청 실패',
        '5001': '요청한 URI 리소스가 존재하지 않음',
        '9000': '알 수 없는 오류 발생.'
}

def get_error_desc(error_code) -> dict:
    return {
        'description': errors.get(error_code)
    }        
